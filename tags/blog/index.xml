<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on SIS Lab</title>
    <link>https://www.meganii.com/tags/blog/</link>
    <description>Recent content in Blog on SIS Lab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 03 Nov 2018 14:10:16 +0900</lastBuildDate>
    
	<atom:link href="https://www.meganii.com/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>QrunchとMediumに技術メモをクロス投稿する</title>
      <link>https://www.meganii.com/blog/2018/11/03/cross-posting-to-qrunch-and-medium/</link>
      <pubDate>Sat, 03 Nov 2018 14:10:16 +0900</pubDate>
      
      <guid>https://www.meganii.com/blog/2018/11/03/cross-posting-to-qrunch-and-medium/</guid>
      <description>&lt;p&gt;もっと気軽にアウトプットできる技術ブログサービス「&lt;a href=&#34;https://qrunch.io/&#34;&gt;Qrunch（クランチ）&lt;/a&gt;」では、重複コンテンツの心配をせずにクロス投稿ができることを知りました。&lt;/p&gt;

&lt;p&gt;クロス投稿が可能なのは、Canonicalに元のブログURLを指定できるためです。Canonicalに参照元のURLを明示的に示してあげることで、検索エンジンにコピー記事ではないことを伝えることができます！&lt;/p&gt;

&lt;p&gt;一般的に考えて、世の中のブログ系サービスは自サービスにユーザーを囲いたいため、わざわざCanonical設定などしません。あえて設定できるという部分が、Qrunchの良いポイントです。これにより、自分のコンテンツは自分の管理下に置くことができます。&lt;/p&gt;

&lt;p&gt;エンジニア向けの情報発信のプラットフォームとしてはQiitaもありますが、ブログと同時投稿するとどうしても、記事の重複が気になってしまいます。Qiita側が重複コンテンツと見なされる分にはよいのですが、SEO的には圧倒的にQiitaが強いので、弱小個人ブログ側が負けそうです。&lt;/p&gt;

&lt;p&gt;なので、ブログに書いた内容はQiitaに投稿するのが憚れるし、逆にQiitaに書いたものはブログにしづらい。そこで出てきたのが、&lt;a href=&#34;https://qrunch.io/&#34;&gt;Qrunch&lt;/a&gt;だと思っています。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>静的サイトジェネレータ「Hugo」でシンプルブログサイトを構築する</title>
      <link>https://www.meganii.com/blog/2017/01/08/static-site-generator-hugo/</link>
      <pubDate>Sun, 08 Jan 2017 15:58:45 +0900</pubDate>
      
      <guid>https://www.meganii.com/blog/2017/01/08/static-site-generator-hugo/</guid>
      <description>&lt;figure class=&#34;center&#34;&gt;
  &lt;amp-img
      src=&#34;https://res.cloudinary.com/meganii/image/upload/q_auto,f_auto/v1511562368/yjhod8fty2uwipjwyiyt.png&#34;
      srcset=&#34;https://res.cloudinary.com/meganii/image/upload/q_auto,f_auto,w_1000/yjhod8fty2uwipjwyiyt.png 1000w,
              https://res.cloudinary.com/meganii/image/upload/q_auto,f_auto,w_800/yjhod8fty2uwipjwyiyt.png 800w,
              https://res.cloudinary.com/meganii/image/upload/q_auto,f_auto,w_640/yjhod8fty2uwipjwyiyt.png 640w,
              https://res.cloudinary.com/meganii/image/upload/q_auto,f_auto,w_400/yjhod8fty2uwipjwyiyt.png 400w,
              https://res.cloudinary.com/meganii/image/upload/q_auto,f_auto,w_320/yjhod8fty2uwipjwyiyt.png 320w&#34;
      width=&#34;685&#34;
      height=&#34;368&#34;
      layout=&#34;responsive&#34;
      alt=&#34;image&#34;&gt;
  &lt;/amp-img&gt;
&lt;/figure&gt;


&lt;p&gt;今、自分でブログ・サイトを構築するとしたら、どんな選択肢があるでしょうか？&lt;/p&gt;

&lt;p&gt;さすがにHTMLを自分で手打ちするのは大変なので、なんらかのCMS(Content Management System コンテンツ管理システム)を利用することになりますが、そのCMSにもさまざまな種類があり、どれを選んだらよいのでしょうか？&lt;/p&gt;

&lt;p&gt;私自身、CMSとしては&lt;a href=&#34;http://lokka.org/&#34;&gt;Lokka&lt;/a&gt;(Ruby), &lt;a href=&#34;https://ja.wordpress.org&#34;&gt;WordPress&lt;/a&gt;(PHP), &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;(Ruby), &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt;(Ruby)、&lt;a href=&#34;https://middlemanapp.com/jp/&#34;&gt;Middleman&lt;/a&gt;(Ruby)と利用してきました。&lt;/p&gt;

&lt;p&gt;どのCMSも一長一短ですが、Ruby, PHPなどの動的スクリプトで構成されるCMSは共通してビルドの遅さを感じます。&lt;/p&gt;

&lt;p&gt;そこで、ビルドが高速という噂の&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;(Golang)に移行したところ、快適でシンプルなブログサイトを構築できましたので、今回はその&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;の紹介をします。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Circle CIでテストを定期実行する</title>
      <link>https://www.meganii.com/blog/2016/09/08/circle-ci-nightly-build/</link>
      <pubDate>Thu, 08 Sep 2016 22:33:29 +0900</pubDate>
      
      <guid>https://www.meganii.com/blog/2016/09/08/circle-ci-nightly-build/</guid>
      <description>&lt;p&gt;前回、HugoのData-driven contenを試した。
&lt;a href=&#34;https://www.meganii.com/blog/2016/09/06/hugo-data-driven-content-for-polupar-posts/&#34;&gt;Hugoで人気記事を表示するためJSONを返すAPIサーバを作りData-driven Contentを試してみた - SIS Lab&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これによって、毎回&lt;code&gt;hugo build&lt;/code&gt;することによって、人気記事を更新する仕組みができた。後は、Cicle CIを定期実行させる。これは、Circle CIのAPIを利用すれば実現できる。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JekyllでPygmentsを使ってのシンタックスハイライト</title>
      <link>https://www.meganii.com/blog/2014/10/29/pjekyll-pygments/</link>
      <pubDate>Wed, 29 Oct 2014 23:15:00 +0900</pubDate>
      
      <guid>https://www.meganii.com/blog/2014/10/29/pjekyll-pygments/</guid>
      <description>シンタックスハイライトに、Pygmentsを使いたくなったので変更する。 1.pygmentsをインストールする。 pip install pygments 2. 以下のコマンドでcs</description>
    </item>
    
    <item>
      <title>思い立ったが吉日。.meドメイン取得しましたー</title>
      <link>https://www.meganii.com/blog/2010/11/10/1289397087/</link>
      <pubDate>Wed, 10 Nov 2010 22:51:27 +0900</pubDate>
      
      <guid>https://www.meganii.com/blog/2010/11/10/1289397087/</guid>
      <description>前々から欲しいとは、思っていたんですが、ふと、独自ドメインでWordPressを運用したくなって、ついにドメイン取得してしまいました笑。さく</description>
    </item>
    
  </channel>
</rss>