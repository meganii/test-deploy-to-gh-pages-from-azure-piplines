<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tf Idf on SIS Lab</title>
    <link>https://www.meganii.com/tags/tf-idf/</link>
    <description>Recent content in Tf Idf on SIS Lab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 13 Aug 2016 18:43:18 +0900</lastBuildDate>
    
	<atom:link href="https://www.meganii.com/tags/tf-idf/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PythonでTF-IDFによる文書推薦</title>
      <link>https://www.meganii.com/blog/2016/08/13/tf-idf-recommendation/</link>
      <pubDate>Sat, 13 Aug 2016 18:43:18 +0900</pubDate>
      
      <guid>https://www.meganii.com/blog/2016/08/13/tf-idf-recommendation/</guid>
      <description>from sklearn.feature_extraction.text import TfidfVectorizer from sklearn.feature_extraction.text import CountVectorizer from sklearn.decomposition import TruncatedSVD from sklearn.preprocessing import Normalizer from sklearn.metrics.pairwise import cosine_similarity import MeCab import re from collections import OrderedDict, defaultdict def mecabAnalyzer(doc, to_stem=True): p = re.compile(r&amp;#39;&amp;lt;.*?&amp;gt;&amp;#39;) tagger = MeCab.Tagger(&amp;#39;mecabrc&amp;#39;) mecab_result = tagger.parse(p.sub(&amp;#34;&amp;#34;,doc)) # mecab_result = tagger.parse(doc) info_of_words = mecab_result.split(&amp;#39;\n&amp;#39;) words = [] for info in info_of_words: # macabで分けると、文の最</description>
    </item>
    
  </channel>
</rss>